# =======================
# üîó CONEXI√ìN A BASE DE DATOS (NEON)
# =======================
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# =======================
# üîê AUTH0 - OAUTH2 Login
# =======================
spring.security.oauth2.client.registration.auth0.client-id=${AUTH0_CLIENT_ID}
spring.security.oauth2.client.registration.auth0.client-secret=${AUTH0_CLIENT_SECRET}
spring.security.oauth2.client.registration.auth0.client-name=Auth0
spring.security.oauth2.client.registration.auth0.provider=auth0
spring.security.oauth2.client.registration.auth0.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.auth0.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.auth0.scope=openid,profile,email

spring.security.oauth2.client.provider.auth0.authorization-uri=https://${AUTH0_DOMAIN}/authorize
spring.security.oauth2.client.provider.auth0.token-uri=https://${AUTH0_DOMAIN}/oauth/token
spring.security.oauth2.client.provider.auth0.user-info-uri=https://${AUTH0_DOMAIN}/userinfo
spring.security.oauth2.client.provider.auth0.user-name-attribute=sub
spring.security.oauth2.client.provider.auth0.jwk-set-uri=https://${AUTH0_DOMAIN}/.well-known/jwks.json

spring.security.oauth2.resourceserver.jwt.issuer-uri=${AUTH0_ISSUER_URI}

server.servlet.context-path=/
